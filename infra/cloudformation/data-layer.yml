AWSTemplateFormatVersion: '2010-09-09'
Description: RDS PostgreSQL + ElastiCache Redis with security groups

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
  PrivateSubnets:
    Type: List<AWS::EC2::Subnet::Id>
  DbInstanceClass:
    Type: String
    Default: db.t3.micro
  DbAllocatedStorage:
    Type: Number
    Default: 20
  DbName:
    Type: String
    Default: trevy
  DbUsername:
    Type: String
    Default: trevy
  DbEngineVersion:
    Type: String
    Default: '15.5'
  RedisNodeType:
    Type: String
    Default: cache.t3.micro

Resources:
  DbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS PostgreSQL security group
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  RedisSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ElastiCache Redis security group
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  DbSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS
      SubnetIds: !Ref PrivateSubnets

  DbPasswordSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: trevy/db/password
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"username": "${DbUsername}"}'
        GenerateStringKey: password
        PasswordLength: 32
        ExcludeCharacters: '"@/\'

  DbInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot
    Properties:
      Engine: postgres
      EngineVersion: !Ref DbEngineVersion
      DBInstanceClass: !Ref DbInstanceClass
      AllocatedStorage: !Ref DbAllocatedStorage
      DBName: !Ref DbName
      MasterUsername: !Ref DbUsername
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${DbPasswordSecret}:SecretString:password}}'
      VPCSecurityGroups:
        - !Ref DbSecurityGroup
      DBSubnetGroupName: !Ref DbSubnetGroup
      PubliclyAccessible: false
      BackupRetentionPeriod: 7
      PreferredBackupWindow: 03:00-04:00
      PreferredMaintenanceWindow: mon:04:00-mon:05:00
      StorageEncrypted: true

  RedisSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Subnet group for Redis
      SubnetIds: !Ref PrivateSubnets

  RedisCluster:
    Type: AWS::ElastiCache::ReplicationGroup
    Properties:
      ReplicationGroupDescription: Redis cluster for Trevy
      Engine: redis
      CacheNodeType: !Ref RedisNodeType
      NumCacheClusters: 2
      AutomaticFailoverEnabled: true
      MultiAZEnabled: true
      CacheSubnetGroupName: !Ref RedisSubnetGroup
      SecurityGroupIds:
        - !Ref RedisSecurityGroup
      AtRestEncryptionEnabled: true
      TransitEncryptionEnabled: false
      SnapshotRetentionLimit: 5
      SnapshotWindow: 03:00-05:00

  RedisConnectionSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: trevy/redis/connection
      SecretString: !Sub |
        {
          "host": "${RedisCluster.PrimaryEndPoint.Address}",
          "port": "${RedisCluster.PrimaryEndPoint.Port}"
        }

Outputs:
  DbSecurityGroupId:
    Value: !Ref DbSecurityGroup
  DbSecretArn:
    Value: !Ref DbPasswordSecret
  DbEndpoint:
    Value: !GetAtt DbInstance.Endpoint.Address
  RedisSecurityGroupId:
    Value: !Ref RedisSecurityGroup
  RedisSecretArn:
    Value: !Ref RedisConnectionSecret
  RedisPrimaryEndpoint:
    Value: !GetAtt RedisCluster.PrimaryEndPoint.Address
